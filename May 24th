import pandas
import matplotlib.pyplot as plt
import numpy as np
import os
import PIL
import PIL.Image
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
from tensorflow.keras.models import Sequential

print('Tensorflow version: ' + tf.__version__)

def Load_The_Data(data_dir):
    '''
    Data Preprocessing
    Input: path of directory with the images in it, images are divided into different directories - each one different class
    Return: Data Generator to be used while training our model
    
    Creating our datasets and normalizing the data
    All images will be rescaled by 1./255 :
    '''
    #defining some parameters for the data preperation
    batch_size = 32
    img_height = 200
    img_width = 200
    #creating the training dataset
    train_dataset = tf.keras.preprocessing.image_dataset_from_directory(
            data_dir,
            validation_split=0.2,
            subset="training",
            image_size=(img_height, img_width),
            batch_size = batch_size,
            seed=420 #A random number to be used as a seed
            )
    #creating the validation dataset
    validation_dataset = tf.keras.preprocessing.image_dataset_from_directory(
        data_dir,
        validation_split=0.2,
        subset="validation",
        image_size=(img_height, img_width),
        batch_size = batch_size,
        seed=420 #A random number to be used as a seed
        )
    class_names = train_dataset.class_names
    '''
    #show 25 images from the training dataset, display each image's label. FOR THE CREATOR'S MONITORING PURPOSES
    plt.figure(figsize=(10, 10))
    for images, labels in train_dataset.take(1):
        for i in range(25):
            ax = plt.subplot(5, 5, i + 1)
            plt.imshow(images[i].numpy().astype("uint8"))
            plt.title(class_names[labels[i]])
            plt.axis("off")
    '''
    return class_names

data_dir = r"C:\Users\PCP\Desktop\Other\school\deepl\faces"
class_names = Load_The_Data(data_dir)
print (class_names)
